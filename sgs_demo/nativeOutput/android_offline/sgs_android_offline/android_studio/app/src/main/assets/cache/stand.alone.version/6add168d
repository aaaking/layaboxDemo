var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/*
* name;
*/
var SceneLogin = /** @class */ (function (_super) {
    __extends(SceneLogin, _super);
    function SceneLogin() {
        var _this = _super.call(this) || this;
        _this.resLoaded = false;
        _this.netCompleted = false;
        _this.requestNum = 0;
        _this.requestIng = false;
        _this.initBg();
        _this.initLoginBtn();
        Laya.stage.on(Laya.Event.RESIZE, _this, _this.onResize);
        return _this;
    }
    Object.defineProperty(SceneLogin, "instance", {
        get: function () {
            // localStorage.removeItem("uuid")
            if (!this._instance)
                this._instance = new SceneLogin();
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    SceneLogin.prototype.show = function () {
        this.onResize();
        Laya.stage.addChild(SceneLogin.instance);
    };
    SceneLogin.prototype.onTouch = function (e) {
        var _this = this;
        switch (e.currentTarget) {
            case this._btnLogin:
                this.showLoading(false);
                UITools.loadResources(function () {
                    _this.resLoaded = true;
                    _this.gotoMenuScene();
                }, this);
                this._btnLogin.mouseEnabled = false;
                UITools.changeGray(this._btnLogin);
                var uuid = localStorage.getItem('uuid');
                var balance = parseInt(localStorage.getItem('balance'));
                if (!uuid) {
                    Ajax.callNet(GameConfig.RPC_URL, { "jsonrpc": "2.0", "method": Urls.personal_newAccount, "params": [""], "id": 67 }, "POST", null, function (data) {
                        //POST http://10.225.20.161:8118?{"jsonrpc":"2.0","method":"personal_newAccount","params":[""],"id":67}
                        //{"jsonrpc":"2.0","id":67,"result":"0x24479b7f771d6d0d6d4003257ca1043661af7bd7"}
                        console.info(data);
                        var info = JSON.parse(data);
                        var uuid = info.result;
                        localStorage.setItem('uuid', uuid);
                        Ajax.callNet(GameConfig.RPC_URL, { "jsonrpc": "2.0", "method": Urls.personal_unlockAccount, "params": [GameConfig.BASE_COIN, GameConfig.BASE_PASS, null], "id": 67 }, "POST", null, function (data) {
                            //POST http://10.225.20.161:8118?{"jsonrpc":"2.0","method":"personal_unlockAccount","params":["0xb398fd7be01eb6b9aca4288a8675be80568f9c4a","00",null],"id":67}
                            //{"jsonrpc":"2.0","id":67,"result":true}
                            console.info(data);
                            var info = JSON.parse(data);
                            if (info.result) {
                                Ajax.callNet(GameConfig.RPC_URL, { "jsonrpc": "2.0", "method": Urls.eth_sendTransaction, "params": [{ "from": GameConfig.BASE_COIN, "to": uuid, "value": "0x4563918244F40000" }], "id": 67 }, "POST", null, function (data) {
                                    //POST http://10.225.20.161:8118?{"jsonrpc":"2.0","method":"eth_sendTransaction","params":[{"from":"0xb398fd7be01eb6b9aca4288a8675be80568f9c4a","to":"0x24479b7f771d6d0d6d4003257ca1043661af7bd7","value":"0x4563918244F40000"}],"id":67}
                                    //{"jsonrpc":"2.0","id":67,"result":"0x6703694f6263004fa905a0470685ea41e7c77c7bc4f8cc5276d550220de9a250"}
                                    console.info(data);
                                    this.userBalance(uuid, true);
                                }.bind(this), this.onerror.bind(this));
                            }
                        }.bind(this), this.onerror.bind(this));
                    }.bind(this), this.onerror.bind(this));
                }
                else {
                    this.userBalance(uuid);
                }
                break;
        }
    };
    SceneLogin.prototype.onerror = function () {
        this.loadingBox.visible = false;
        Laya.timer.clearAll(this);
        this._btnLogin.mouseEnabled = true;
        UITools.resetGray(this._btnLogin);
    };
    SceneLogin.prototype.gotoMenuScene = function () {
        if (this.resLoaded && this.netCompleted) {
            this.showLoading(true);
            Laya.Tween.clearAll(this._btnLogin);
            this._bgLogin.skin = menu.SceneMenu.bgMenu;
            this.removeChild(this._btnLogin);
            this.removeChild(this.loadingBox);
            menu.SceneMenu.instance;
        }
    };
    SceneLogin.prototype.userBalance = function (uuid, uuidNull) {
        if (uuidNull === void 0) { uuidNull = false; }
        Laya.timer.loop(1000, this, function () {
            if (this.requestNum > 180) {
                this.onerror();
                this.requestNum = 0;
                return;
            }
            if (this.requestIng) {
                return;
            }
            this.requestNum++;
            this.requestIng = true;
            Ajax.callNet(GameConfig.RPC_URL, { "jsonrpc": "2.0", "method": Urls.eth_getBalance, "params": [uuid, "latest"], "id": this.requestNum }, "POST", null, function (data) {
                // {"id":67,"jsonrpc": "2.0","result": "0x0234c8a3397aab58" }// 158972490234375000
                console.info(data);
                var info = JSON.parse(data);
                var balance = parseInt(parseInt(info.result, 16).toString(10));
                console.info("balance: " + balance);
                if (balance > 0) {
                    localStorage.setItem('balance', balance + "");
                    Laya.timer.clearAll(this);
                    this.netCompleted = true;
                    this.gotoMenuScene();
                }
                else if (balance <= 0 && !uuidNull) {
                    Laya.timer.clearAll(this);
                    localStorage.setItem('balance', balance + "");
                    this.showLoading(true);
                    this._btnLogin.mouseEnabled = true;
                    UITools.resetGray(this._btnLogin);
                    new CommonDialog("余额不足，无法进入！");
                }
                else {
                }
                this.requestIng = false;
            }.bind(this), this.onerror.bind(this));
        });
    };
    SceneLogin.prototype.showLoading = function (success) {
        if (!this.loadingBox) {
            this.initLoading();
        }
        if (success) {
            Laya.timer.clearAll(this);
            this.loadingBox.removeSelf();
        }
        else {
            this.loadingBox.visible = true;
            this.loadingLabel.text = "正在登录中...";
        }
    };
    SceneLogin.prototype.initLoading = function () {
        this.loadingBox = new Laya.Box();
        this.loadingBox.centerX = this.loadingBox.centerY = 0;
        this.loadingBg = new Laya.Image("menu/img_3.png");
        this.loadingBg.centerX = this.loadingBox.centerY = 0;
        this.loadingLabel = new Laya.Label("");
        this.loadingLabel.fontSize = 30;
        this.loadingLabel.color = "#Ceb589";
        this.loadingLabel.centerX = this.loadingLabel.centerY = 0;
        this.loadingBox.addChild(this.loadingBg);
        this.loadingBox.addChild(this.loadingLabel);
        this.addChild(this.loadingBox);
    };
    SceneLogin.prototype.onResize = function (e) {
        if (e === void 0) { e = null; }
        this.width = Laya.stage.width;
        this.height = Laya.stage.height;
        this._btnLogin.on(Laya.Event.CLICK, this, this.onTouch);
    };
    SceneLogin.prototype.initBg = function () {
        this._bgLogin = new Laya.Image("login/bg_login.jpg");
        this._bgLogin.centerX = this._bgLogin.centerY = 0;
        this.addChild(this._bgLogin);
    };
    SceneLogin.prototype.initLoginBtn = function () {
        this._btnLogin = new menu.MenuCard("login/btn_guest.png");
        this._btnLogin.anchorX = this._btnLogin.anchorY = 0.5;
        this._btnLogin.stateNum = 2;
        this._btnLogin.centerX = 0;
        this._btnLogin.y = Laya.stage.height - 100 - (this._btnLogin.height >> 1);
        this.addChild(this._btnLogin);
    };
    /**
* 获取设备唯一ID
* @param callback
* @param prefix
* @param makeNew
*/
    SceneLogin.prototype.getDeviceUUID = function () {
        var uuid = localStorage.getItem('uuid');
        if (!uuid) {
            uuid = StringUtils.makeRandomString(32);
            localStorage.setItem('uuid', uuid);
        }
        return uuid;
    };
    return SceneLogin;
}(Laya.View));
//# sourceMappingURL=SceneLogin.js.map