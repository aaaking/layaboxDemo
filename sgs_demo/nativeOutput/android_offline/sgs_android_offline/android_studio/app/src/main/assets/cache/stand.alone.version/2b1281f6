/*
* name;
*/
var ExchangeManager = /** @class */ (function () {
    function ExchangeManager() {
    }
    Object.defineProperty(ExchangeManager, "instance", {
        get: function () {
            if (!this._instance)
                this._instance = new ExchangeManager();
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    ExchangeManager.prototype.testInitCards = function (callback) {
        this._cards = [];
        Ajax.callNet(GameConfig.RPC_URL, { "jsonrpc": "2.0", "method": Urls.eth_call, "params": [{ "from": localStorage.getItem('uuid'), "to": GameConfig.RPC_ADDRESS, "data": "0x3ded315b" }, "latest"], "id": 67 }, "POST", null, function (data) {
            this._cards = ParseData.parseExchangeData(data);
            callback();
        }.bind(this));
    };
    Object.defineProperty(ExchangeManager.prototype, "cards", {
        get: function () {
            return this._cards;
        },
        enumerable: true,
        configurable: true
    });
    ExchangeManager.prototype.getCardsByCamp = function (camp) {
        if (camp == 5)
            return this.cards;
        else
            return this._cards.filter(function (item) {
                var cfg = GameConfig.getCfgHeroById(item && item.cfg ? item.cfg.id : -16913);
                return cfg && cfg.camp == camp;
            });
    };
    return ExchangeManager;
}());
//# sourceMappingURL=ExchangeManager.js.map